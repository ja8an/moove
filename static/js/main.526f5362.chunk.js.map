{"version":3,"sources":["assets/img/logo.png","layout/elements/header/index.jsx","api/TMDb.js","layout/template/search-layout/index.jsx","utils/index.js","layout/pages/home-page/index.jsx","api/OMDb.js","redux/actions.js","redux/selectors.js","layout/elements/movie-card/index.jsx","layout/pages/search-page/index.jsx","layout/template/main-layout/index.jsx","layout/pages/movie-page/index.jsx","layout/pages/favorites-page/index.js","layout/route/index.jsx","redux/reducers/favorites.js","redux/reducers/index.js","redux/store.js","reportWebVitals.js","index.js"],"names":["Header","showLogo","gradient","className","Container","Navbar","bg","variant","expand","to","Image","src","logo","width","alt","Toggle","aria-controls","Collapse","id","Nav","icon","faStar","request","axios","create","baseURL","params","api_key","process","imgUrl","path","size","tmdb","trendOfTheDay","get","SearchLayout","Component","component","rest","useState","movie","setMovie","useEffect","TMDb","then","response","min","max","results","data","length","Math","floor","random","render","props","style","backgroundImage","backdrop_path","Jumbotron","fluid","backgroundColor","Badge","pathname","search","title","overview","HomePage","Form","action","Row","Col","xs","height","md","InputGroup","Control","name","placeholder","autoFocus","Append","Button","faSearch","fixedWidth","apiKey","type","omdb","s","page","byTitle","byId","i","plot","SET_FAVORITE","UNSET_FAVORITE","getFavorites","store","favorites","connect","state","isFavorite","favs","Object","keys","some","key","setFavorite","payload","unsetFavorite","addToast","useToasts","Card","Img","Poster","Body","faCalendarAlt","Year","onClick","imdbID","appearance","autoDismiss","toggleFavorite","Title","SearchPage","location","queryString","parse","history","useHistory","searchTerm","setSearchTerm","totalResults","setTotalResults","totalPages","setTotalPages","setResults","setPage","hasMore","setHasMore","doSearch","q","Response","Search","Number","push","_totalPages","ceil","Group","value","onChange","v","target","faExclamation","dataLength","next","_currentPage","loader","endMessage","textAlign","map","result","index","sm","lg","MainLayout","MoviePage","useParams","OMDb","rounded","Ratings","rating","Source","Value","faFilm","Plot","Actors","Awards","Director","Writer","Language","RouteLayout","basename","placement","exact","FavoritesPage","initialState","localStorage","getItem","JSON","_temp","setItem","stringify","combineReducers","createStore","rootReducer","composeWithDevTools","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.526f5362.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.573feee1.png\";","import { Navbar, Nav, Container, Image } from 'react-bootstrap';\r\nimport logo from '../../../assets/img/logo.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport './index.scss';\r\n\r\n\r\nconst Header = ({ showLogo = true, gradient = false, ...rest }) => {\r\n\r\n    return (<div className={gradient ? 'linear-gradient' : ''}>\r\n        <Container>\r\n            <Navbar bg=\"transparent\" variant={gradient ? 'dark' : 'light'} expand=\"lg\">\r\n\r\n                {showLogo && <Link to={'/'} className='navbar-brand'>\r\n                    <Image src={logo} width={150} alt={'moove logo'} className='p-3' />\r\n                </Link>}\r\n\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n\r\n                    <Nav className={'ml-auto'}>\r\n                        <Link to={'/stared'} className='nav-link'>\r\n                            <FontAwesomeIcon icon={faStar} />{' '}Favorite Movies\r\n                        </Link>\r\n                    </Nav>\r\n\r\n                </Navbar.Collapse>\r\n\r\n            </Navbar>\r\n        </Container>\r\n    </div >);\r\n};\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nconst request = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3',\r\n    params: {\r\n        api_key: process.env.REACT_APP_TMDB_API_KEY\r\n    }\r\n});\r\n\r\nconst tmdb = () => {\r\n\r\n    return {\r\n        trendOfTheDay() {\r\n            return request.get('/trending/movie/day');\r\n        }\r\n    };\r\n\r\n};\r\n\r\nconst imgUrl = (path, size = 'original') => {\r\n    return `https://image.tmdb.org/t/p/${size}/${path}`;\r\n};\r\n\r\nexport default tmdb();\r\n\r\nexport { imgUrl };","import React, { useEffect, useMemo, useState } from \"react\";\r\n\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\nimport Header from '../../elements/header';\r\n\r\nimport './index.scss';\r\nimport { Badge, Container, Jumbotron } from 'react-bootstrap';\r\nimport TMDb, { imgUrl } from \"../../../api/TMDb\";\r\nimport { randomInt } from \"../../../utils\";\r\n\r\n\r\nconst SearchLayout = ({ component: Component, ...rest }) => {\r\n\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    useEffect(() => {\r\n        TMDb.trendOfTheDay().then(response => {\r\n            let results = response.data.results;\r\n            setMovie(results[randomInt(0, results.length - 1)]);\r\n        });\r\n    }, []);\r\n\r\n    return <Route {...rest} render={props => (\r\n        <div style={{ backgroundImage: `url(${movie && imgUrl(movie.backdrop_path)})` }} className={'movie-backdrop d-flex flex-column vh-100'}>\r\n            <Header showLogo={false} gradient className='flex-shrink-1' />\r\n            <Container className={'flex-grow-1'}>\r\n                <Component {...props} />\r\n            </Container>\r\n            {movie && <Jumbotron fluid style={{ backgroundColor: 'transparent' }} className={'jumbotron-backdrop flex-shrink-1 mb-0'}>\r\n                <Container>\r\n                    <Badge variant='primary'>trending</Badge>\r\n                    <h1 className={'text-shadow'}>\r\n                        <Link to={{\r\n                            pathname: '/search',\r\n                            search: `?q=${movie.title}`\r\n                        }} className='text-white'>{movie.title}</Link>\r\n                    </h1>\r\n                    <p className={'text-shadow  text-white'}>{movie.overview}</p>\r\n                </Container>\r\n            </Jumbotron>}\r\n        </div>\r\n    )} />;\r\n}\r\n\r\nexport default SearchLayout;","const randomInt = (min, max) => {\r\n    return min + Math.floor((max - min) * Math.random());\r\n};\r\n\r\nexport { randomInt };","import { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, Row, Col, Form, Image, InputGroup } from \"react-bootstrap\";\r\nimport logo from '../../../assets/img/logo.png';\r\n\r\nimport './index.scss';\r\n\r\nconst HomePage = () => {\r\n\r\n    return <>\r\n        <Form action={'/search'} className='h-100 animate__animated animate__fadeIn'>\r\n            <Row className='h-100 align-content-end justify-content-center'>\r\n                <Col xs={12} className='text-center p-5 animate__animated animate__fadeInUp'>\r\n                    <Image src={logo} height={100} width={294.7} />\r\n                </Col>\r\n                <Col xs={12} md={6}>\r\n                    <InputGroup className='shadow-lg'>\r\n                        <Form.Control name={'q'} placeholder={'Type a movie name to search'} autoFocus />\r\n                        <InputGroup.Append>\r\n                            <Button>\r\n                                <FontAwesomeIcon icon={faSearch} fixedWidth />{' '}Search\r\n                            </Button>\r\n                        </InputGroup.Append>\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    </>;\r\n};\r\n\r\nexport default HomePage;","import axios from \"axios\";\r\n\r\nconst request = axios.create({\r\n    baseURL: 'http://www.omdbapi.com/',\r\n    params: {\r\n        apiKey: process.env.REACT_APP_OMDB_API_KEY,\r\n        type: 'movie'\r\n    }\r\n});\r\n\r\nconst omdb = () => {\r\n\r\n    return {\r\n        search(s, page = 1) {\r\n            return request.get('/', {\r\n                params: { s, page }\r\n            });\r\n        },\r\n        byTitle(title) {\r\n            return \"http://www.omdbapi.com/?t=a\";\r\n        },\r\n        byId(i) {\r\n            return request.get('/', {\r\n                params: { i, plot: 'full' }\r\n            });\r\n        }\r\n    };\r\n\r\n};\r\n\r\nexport default omdb();","// Favorites\r\nexport const SET_FAVORITE = \"SET_FAVORITE\";\r\nexport const UNSET_FAVORITE = \"UNSET_FAVORITE\";\r\n// Auth\r\nexport const SET_AUTH = \"SET_AUTH\";\r\nexport const UNSET_AUTH = \"UNSET_AUTH\";\r\n\r\nexport const setFavorite = movie => ({\r\n    type: SET_FAVORITE,\r\n    payload: { movie }\r\n});\r\n\r\nexport const unsetFavorite = id => ({\r\n    type: UNSET_FAVORITE,\r\n    payload: { id }\r\n});\r\n\r\n\r\nexport const setAuth = id => ({\r\n    type: SET_AUTH,\r\n    payload: { id }\r\n});\r\n\r\nexport const unsetAuth = () => ({\r\n    type: UNSET_AUTH,\r\n});","export const getFavorites = store => {\r\n    return store.favorites || {};\r\n};\r\n\r\nexport const getAuth = store => {\r\n    return store.auth || null;\r\n};\r\n\r\nexport const isFavorite = (store, id) => {\r\n    const favs = getFavorites(store);\r\n    return Object.keys(favs).some(key => key === id);\r\n};\r\n\r\nexport const isLoggedIn = (store) => {\r\n    return getAuth(store) != null;\r\n};","import { faCalendarAlt, faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Card, Row, Col, OverlayTrigger, Button, Badge, Tooltip } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setFavorite, unsetFavorite } from \"../../../redux/actions\";\r\nimport { isFavorite } from \"../../../redux/selectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { useToasts } from 'react-toast-notifications'\r\n\r\n\r\nconst MovieCard = ({ isFavorite, setFavorite, unsetFavorite, movie, ...rest }) => {\r\n\r\n    const { addToast } = useToasts();\r\n\r\n    const toggleFavorite = movie => {\r\n\r\n        if (!isFavorite(movie.imdbID)) {\r\n            setFavorite(movie);\r\n            addToast('Successfully added to your favorites', { appearance: 'success', autoDismiss: true })\r\n        }\r\n        else {\r\n            unsetFavorite(movie.imdbID);\r\n            addToast('Successfully removed from your favorites', { appearance: 'success', autoDismiss: true })\r\n        }\r\n\r\n\r\n    };\r\n\r\n    return <Card className='shadow-lg' {...rest}>\r\n        <Card.Img variant='top' src={movie.Poster && movie.Poster !== 'N/A' ? movie.Poster : 'https://fakeimg.pl/250x300/?retina=1&text=moove&lobster=noto'} className='poster-size' />\r\n        <Card.Body>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <Badge variant='primary'>\r\n                        <FontAwesomeIcon icon={faCalendarAlt} fixedWidth />\r\n                        {movie.Year}\r\n                    </Badge>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button variant='link' onClick={() => toggleFavorite(movie)}>\r\n                        <FontAwesomeIcon icon={faStar} className={isFavorite(movie.imdbID) ? 'text-danger' : 'text-secondary'} fixedWidth />\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Card.Title>\r\n                <Link to={`/${movie.imdbID}`}>{movie.Title}</Link>\r\n            </Card.Title>\r\n        </Card.Body>\r\n    </Card>;\r\n};\r\n\r\n\r\nexport default connect(\r\n    state => {\r\n        return {\r\n            isFavorite: (id) => {\r\n                return isFavorite(state, id);\r\n            }\r\n        };\r\n    },\r\n    { setFavorite, unsetFavorite }\r\n)(MovieCard);\r\n","import { useEffect, useState } from \"react\";\r\nimport omdb from \"../../../api/OMDb\";\r\nimport queryString from 'query-string';\r\nimport { Form, Row, Col } from \"react-bootstrap\";\r\n\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport './index.scss';\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faExclamation } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nimport MovieCard from \"../../elements/movie-card\";\r\n\r\nconst SearchPage = ({ setFavorite, unsetFavorite, location, ...rest }) => {\r\n\r\n    const params = queryString.parse(location.search);\r\n    const history = useHistory();\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [totalResults, setTotalResults] = useState(0);\r\n    const [totalPages, setTotalPages] = useState(1);\r\n    const [results, setResults] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [hasMore, setHasMore] = useState(true);\r\n\r\n    const doSearch = () => {\r\n        omdb.search(params.q).then(response => {\r\n            if (response.data && response.data.Response === 'True') {\r\n                setResults(response.data.Search);\r\n                if (Number(response.data.totalResults) === 1) {\r\n                    history.push(`/${response.data.Search[0].imdbID}`);\r\n                    return;\r\n                }\r\n                setTotalResults(response.data.totalResults);\r\n                const _totalPages = Math.ceil(response.data.totalResults / 10);\r\n                setTotalPages(_totalPages);\r\n                setHasMore(response.data.totalResults > 10);\r\n            }\r\n        });\r\n    };\r\n\r\n    const fetchMore = () => {\r\n        if (!hasMore)\r\n            return;\r\n        const _currentPage = page + 1;\r\n        omdb.search(params.q, _currentPage).then(response => {\r\n            if (response.data.Search) {\r\n                setResults([...results, ...response.data.Search]);\r\n                setHasMore(page < totalPages);\r\n            } else {\r\n                setHasMore(false);\r\n            };\r\n        });\r\n        setPage(_currentPage);\r\n    };\r\n\r\n    useEffect(() => {\r\n        doSearch(searchTerm);\r\n    }, [searchTerm]);\r\n\r\n    useEffect(() => {\r\n        if (params.q) {\r\n            setSearchTerm(params.q);\r\n            doSearch(params.q);\r\n        }\r\n        else\r\n            history.push('/');\r\n    }, []);\r\n\r\n\r\n\r\n    return <>\r\n\r\n        <Form action='/search'>\r\n            <Form.Group>\r\n                <Form.Control name='q' value={searchTerm} onChange={v => setSearchTerm(v.target.value)} />\r\n            </Form.Group>\r\n        </Form>\r\n\r\n        {(!results || results.length === 0) && <>\r\n            <div className='text-muted p-5 text-center'>\r\n                <FontAwesomeIcon icon={faExclamation} fixedWidth />\r\n                No results found!\r\n            </div>\r\n        </>}\r\n\r\n        {results && results.length > 0 && <>\r\n\r\n            <h5 className='text-primary p-3'>{totalResults} results found:</h5>\r\n\r\n            <InfiniteScroll\r\n                dataLength={results.length} //This is important field to render the next data\r\n                next={fetchMore}\r\n                hasMore={hasMore}\r\n                loader={<h4>Loading...</h4>}\r\n                endMessage={\r\n                    <p style={{ textAlign: 'center' }} className={'p-5'}>\r\n                        <b>Yay! You have seen it all</b>\r\n                    </p>\r\n                }>\r\n                <Row>\r\n                    {results && results.map((result, index) => {\r\n                        return result && <Col sm={12} md={4} lg={3} key={index}>\r\n                            <MovieCard movie={result} />\r\n                        </Col>;\r\n                    })}\r\n                </Row>\r\n            </InfiniteScroll>\r\n        </>}\r\n\r\n    </>;\r\n};\r\nexport default SearchPage;","import './index.scss';\nimport { Container } from 'react-bootstrap';\nimport Header from '../../elements/header';\nimport React from \"react\";\nimport { Route } from 'react-router-dom';\n\n\nconst MainLayout = ({ component: Component, ...rest }) => {\n\n  return (\n    <Route {...rest} render={props => (\n      <>\n        <Header />\n        <Container>\n          <Component {...props} />\n        </Container>\n      </>\n    )} />);\n}\n\nexport default MainLayout;","import { faAward, faFilm, faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Badge, Col, Image, Media, Row } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport OMDb from \"../../../api/OMDb\";\r\n\r\n\r\nconst MoviePage = () => {\r\n\r\n    let { id } = useParams();\r\n\r\n    const [movie, setMovie] = useState(null);\r\n\r\n    useEffect(() => {\r\n        OMDb.byId(id).then(response => {\r\n            setMovie(response.data);\r\n        });\r\n    }, []);\r\n\r\n    return <>\r\n        {movie && <>\r\n\r\n            <Row>\r\n                <Col xs={12} md={3}>\r\n                    <Image src={movie.Poster} className='shadow-lg' fluid rounded />\r\n\r\n                    {movie.Ratings && movie.Ratings.length > 0 && <>\r\n                        <h5 className='text-primary mt-3'>\r\n                            <FontAwesomeIcon icon={faStar} fixedWidth />{' '}Ratings</h5>\r\n                        {movie.Ratings.map(rating => {\r\n                            return <p>{rating.Source}:{' '}<b>{rating.Value}</b></p>\r\n                        })}\r\n                    </>}\r\n\r\n                </Col>\r\n                <Col xs={12} md={9}>\r\n                    <h4 className='text-primary'><FontAwesomeIcon icon={faFilm} fixedWidth />{' '}{movie.Title}</h4>\r\n\r\n                    <p>{movie.Plot}</p>\r\n\r\n                    <h5 className='text-secondary'>Actors</h5>\r\n                    <p>{movie.Actors}</p>\r\n\r\n                    <h5 className='text-secondary'>Awards</h5>\r\n                    <p>{movie.Awards}</p>\r\n\r\n                    <h5 className='text-secondary'>Tecnical info</h5>\r\n\r\n                    <h6 className='text-secondary'>Direction</h6>\r\n                    <p>{movie.Director}</p>\r\n\r\n                    <h6 className='text-secondary'>Script</h6>\r\n                    <p>{movie.Writer}</p>\r\n\r\n                    <h6 className='text-secondary'>Language</h6>\r\n                    <p>{movie.Language}</p>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>}\r\n    </>;\r\n}\r\n\r\nexport default MoviePage;","import { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFavorites } from \"../../../redux/selectors\";\r\nimport MovieCard from \"../../elements/movie-card\";\r\n\r\nconst FavoritesPage = ({ favorites }) => {\r\n\r\n    return <>\r\n\r\n        <h5 className='text-primary'>\r\n            <FontAwesomeIcon icon={faStar} fixedWidth />\r\n            Favorites\r\n            </h5>\r\n\r\n        {(!favorites || Object.keys(favorites).length === 0) && <>\r\n            <div className='p-5 text-center text-muted'>\r\n                No favorite movie yet!\r\n                </div>\r\n        </>}\r\n\r\n        {favorites && favorites.length > 0 &&\r\n            <Row>\r\n                {Object.keys(favorites).map((movie, index) => {\r\n                    return <Col sm={12} md={4} lg={3} key={index}>\r\n                        <MovieCard movie={favorites[movie]} />\r\n                    </Col>\r\n                })}\r\n            </Row>\r\n        }\r\n\r\n    </>;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    const favorites = getFavorites(state);\r\n    return { favorites };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FavoritesPage);\r\n","import React from 'react';\r\n\r\nimport SearchLayout from '../template/search-layout';\r\nimport HomePage from '../pages/home-page';\r\nimport SearchPage from '../pages/search-page';\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport MainLayout from '../template/main-layout';\r\nimport MoviePage from '../pages/movie-page';\r\nimport FavoritesPage from '../pages/favorites-page';\r\nimport { ToastProvider } from 'react-toast-notifications'\r\n\r\n\r\nconst RouteLayout = (props) => {\r\n    return <Router basename={process.env.PUBLIC_URL}>\r\n        <ToastProvider placement=\"top-center\">\r\n            <Switch>\r\n                <SearchLayout path={'/'} exact component={HomePage} />\r\n                <MainLayout path={'/search'} component={SearchPage} />\r\n                <MainLayout path={'/stared'} component={FavoritesPage} />\r\n                <MainLayout path={'/:id'} component={MoviePage} />\r\n            </Switch>\r\n        </ToastProvider>\r\n    </Router>;\r\n};\r\n\r\nexport default RouteLayout;","import { SET_FAVORITE, UNSET_FAVORITE } from \"../actions\";\r\n\r\nconst initialState = localStorage.getItem('favorites') ?\r\n    JSON.parse(localStorage.getItem('favorites')) : {\r\n\r\n    };\r\n\r\nconst favorites = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_FAVORITE: {\r\n            const { movie } = action.payload;\r\n            const _temp = {\r\n                ...state,\r\n                [movie.imdbID]: movie\r\n            };\r\n            localStorage.setItem('favorites', JSON.stringify(_temp));\r\n            return _temp;\r\n        }\r\n        case UNSET_FAVORITE:\r\n            const { id } = action.payload;\r\n            delete state[id];\r\n            localStorage.setItem('favorites', JSON.stringify(state));\r\n            return { ...state };\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default favorites;","import { combineReducers } from \"redux\";\r\n\r\nimport favorites from \"./favorites\";\r\n\r\nexport default combineReducers({ favorites });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nexport default createStore(rootReducer, composeWithDevTools());","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport RouteLayout from './layout/route';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<React.StrictMode>\n  <Provider store={store}>\n    <RouteLayout />\n  </Provider>\n</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}